From a9fd7e8fd1a6d59cee37105be9561fa8c7d619b5 Mon Sep 17 00:00:00 2001
From: ZhangYong <zhangyong@espressif.com>
Date: Fri, 5 Mar 2021 20:02:35 +0800
Subject: [PATCH] add I2S stream delay API.

---
 components/audio_stream/i2s_stream.c         | 27 ++++++++++++++++++++++++---
 components/audio_stream/include/i2s_stream.h |  2 ++
 2 files changed, 26 insertions(+), 3 deletions(-)

diff --git a/components/audio_stream/i2s_stream.c b/components/audio_stream/i2s_stream.c
index 21213b4..be653cd 100644
--- a/components/audio_stream/i2s_stream.c
+++ b/components/audio_stream/i2s_stream.c
@@ -244,6 +244,12 @@ static int _i2s_write(audio_element_handle_t self, char *buffer, int len, TickTy
     return bytes_written;
 }
 
+static int I2S_delay;
+void i2s_stream_set_delay(int delay)
+{
+    I2S_delay = delay;
+}
+
 static int _i2s_process(audio_element_handle_t self, char *in_buffer, int in_len)
 {
     int r_size = audio_element_input(self, in_buffer, in_len);
@@ -260,16 +266,31 @@ static int _i2s_process(audio_element_handle_t self, char *in_buffer, int in_len
             memset(in_buffer, 0x00, in_len);
         }
         r_size = in_len;
-    }
-    if ((r_size > 0)) {
+        if (r_size > 0) {
+            if (i2s->use_alc) {
+                audio_element_getinfo(self, &i2s_info);
+                alc_volume_setup_process(in_buffer, r_size, i2s_info.channels, i2s->volume_handle, i2s->volume);
+            }
+            if (I2S_delay != 0) {
+                vTaskDelay(I2S_delay / portTICK_PERIOD_MS);
+                I2S_delay = 0;
+            }
+            audio_element_multi_output(self, in_buffer, r_size, 0);
+            w_size = audio_element_output(self, in_buffer, r_size);
+        }
+    } else if (r_size > 0) {
         if (i2s->use_alc) {
             audio_element_getinfo(self, &i2s_info);
             alc_volume_setup_process(in_buffer, r_size, i2s_info.channels, i2s->volume_handle, i2s->volume);
         }
+        if (I2S_delay != 0) {
+            vTaskDelay(I2S_delay / portTICK_PERIOD_MS);
+            I2S_delay = 0;
+        }
         audio_element_multi_output(self, in_buffer, r_size, 0);
         w_size = audio_element_output(self, in_buffer, r_size);
         audio_element_update_byte_pos(self, w_size);
-    } else {
+    } else if (r_size < 0) {
         esp_err_t ret = i2s_stream_clear_dma_buffer(self);
         if (ret != ESP_OK) {
             return ret;
diff --git a/components/audio_stream/include/i2s_stream.h b/components/audio_stream/include/i2s_stream.h
index 1559930..05193fd 100644
--- a/components/audio_stream/include/i2s_stream.h
+++ b/components/audio_stream/include/i2s_stream.h
@@ -188,6 +188,8 @@ esp_err_t i2s_alc_volume_set(audio_element_handle_t i2s_stream, int volume);
  */
 esp_err_t i2s_alc_volume_get(audio_element_handle_t i2s_stream, int* volume);
 
+void i2s_stream_set_delay(int delay);
+
 #ifdef __cplusplus
 }
 #endif
-- 
2.7.4

